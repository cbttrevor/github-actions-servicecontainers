on:
  push:
  workflow_dispatch:

env:
  mysql-host-port: 3306
  mysqlpassword: hereisarandompassword
  create-database: CREATE DATABASE IF NOT EXISTS cbtnuggets;
  create-table: CREATE TABLE IF NOT EXISTS cbtnuggets.people (firstName varchar(30), lastName varchar(30));
  mysql-user: root

jobs:
  svc-container:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.4.0
    - name: Wait for Service Container to start
      shell: pwsh
      run: |
        $TcpClient = [System.Net.Sockets.TcpClient]::new()
        while ($true) {
          try {
            $TcpClient.Connect('127.0.0.1', ${{ env.mysql-host-port }})
            Write-Host -Object 'MySQL is up and running. Moving to next step ...'
            Start-Sleep -Seconds 45
            break
          }
          catch {
            Write-Host -Object 'Waiting for service container to start'
            Start-Sleep -Seconds 2
          }
        }
    - name: Connect to MySQL - Create database
      run: mysql --host=127.0.0.1 --password=${{ env.mysqlpassword }} --user=${{ env.mysql-user }} --database=mysql --execute '${{ env.create-database }}'
    - name: Connect to MySQL - Create table
      run: mysql --host=127.0.0.1 --password=${{ env.mysqlpassword }} --user=${{ env.mysql-user }} --database=mysql --execute '${{ env.create-table }}'
    services:
      database:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
        ports:
        - 3306:3306
      database2:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database3:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database4:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database5:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database6:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database7:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database8:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database9:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database10:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database11:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database12:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database13:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database14:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database15:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database16:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}
      database17:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.mysqlpassword }}

